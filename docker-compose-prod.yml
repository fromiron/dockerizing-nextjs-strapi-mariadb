version: "3"
services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    env_file: .env
    restart: unless-stopped
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: database
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./backend/config:/backend/app/config
      - ./backend/src:/backend/app/src
      - ./backend/package.json:/backend/package.json
      - ./backend/package-lock.json:/backend/package-lock.json
      - ./backend/.env:/backend/app/.env
      - ./backend/public/uploads:/backend/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - project
    depends_on:
      - database

  database:
    container_name: database
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    image: mariadb:10.10.2
    environment:
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    volumes:
      - project-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - project

  frontend:
    container_name: frontend
    restart: unless-stopped
    env_file: .env
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    volumes:
      - "./frontend:/frontend/app"
      - "/frontend/node_modules"
      - "/frontend/app/.next"
    ports:
      - "3000:3000"
    networks:
      - project
    depends_on:
      - backend

volumes:
  project-data:

networks:
  project:
    name: Project
    driver: bridge
